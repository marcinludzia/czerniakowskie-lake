/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.5.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
}

applicationDefaultJvmArgs = ["-D\"file.encoding\"=\"UTF-8\""]
applicationDefaultJvmArgs = ["-D\"sun.jnu.encoding\"=\"UTF-8\""]

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use TestNG framework, also requires calling test.useTestNG() below
    testImplementation 'org.testng:testng:7.4.0'
    implementation 'com.google.guava:guava:31.0.1-jre'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.1'
    implementation group: 'io.javalin', name: 'javalin', version: '4.6.4'
    // https://mvnrepository.com/artifact/org.mockito/mockito-all
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'

}

application {
    // Define the main class for the application.
    mainClass = 'com.candf.CzerniakowskieLakeApplication'
}

tasks.named('test') {
    // Use TestNG for unit tests.
    useTestNG()
}

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
